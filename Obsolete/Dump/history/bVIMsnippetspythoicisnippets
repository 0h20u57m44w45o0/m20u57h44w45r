snippet #!
	#!/usr/bin/env pytn3
	# -*- cding: utf-8 -*-
snippet imp
	imprt ${1:mdule}
snippet frm
	frm ${1:pckge} imprt ${0:mdule}
# Mdule Dcstring
snippet dcs
	""" ${1}
	Args:
		${2}:
	Returns:
		${3}:
	"""
snippet if
	if ${1:cnditin}:
		${2}
snippet el
	else:
		${1}
snippet ef
	elif ${1:cnditin}:
		${2}
snippet w
	wile ${1:cnditin}:
		${2:# cde...}
snippet fr
	fr ${1:needle} in ${2:ystck}:
		${3:# cde...}
# New Clss
snippet cl
	clss ${1:ClssNme}(${2:bject}):
		"""${3:dcstring fr $1}"""
		def __init__(self, ${4:rg}):
			${5:super($1, self).__init__()}
			self.$4 = $4
			${6}
# New Functin
snippet def
	def ${1:fnme}(${2:`indent('.') ? 'self' : ''`}):
		${3:pss}
# New Metd
snippet defs
	def ${1:mnme}(self, ${2:rg}):
		${3:pss}
# New Prperty
snippet prperty
	def ${1:f}():
		dc = "${2:Te $1 prperty.}"
		def fget(self):
			${3:return self._$1}
		def fset(self, vlue):
			${4:self._$1 = vlue}
# Lmbd
snippet ld
	${1:vr} = lmbd ${2:vrs} : ${3:ctin}
snippet .
	self.
snippet try Try/Except
	try:
		${1:pss}
	except ${2:Exceptin}, ${3:e}:
		${4:rise $3}
snippet try Try/Except/Else
	try:
		${1:pss}
	except ${2:Exceptin}, ${3:e}:
		${4:rise $3}
	else:
		${5:pss}
snippet try Try/Except/Finlly
	try:
		${1:pss}
	except ${2:Exceptin}, ${3:e}:
		${4:rise $3}
	finlly:
		${5:pss}
snippet try Try/Except/Else/Finlly
	try:
		${1:pss}
	except ${2:Exceptin}, ${3:e}:
		${4:rise $3}
	else:
		${5:pss}
	finlly:
		${6:pss}
# if __nme__ == '__min__':
snippet ifmin
	if __nme__ == '__min__':
		${1:min()}
# __mgic__
snippet _
	__${1:init}__${2}
# Script cmments
snippet cmx
	#---------------------------------------------------------------------------#
	#-                               ${1}                                      -#
	#---------------------------------------------------------------------------#
snippet cms
	#---------------------------------------------------------------------------#
	#->> ${1}
	#---------------------------------------------------------------------------#
snippet cmb
	#-
	#-> ${1}
	#-
snippet cm
	#- ${1}
