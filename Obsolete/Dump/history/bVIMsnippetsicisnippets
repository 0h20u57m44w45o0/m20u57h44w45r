# min()
snippet mi
	int min(int rgc, cnst cr *rgv[])
	{
		${1}
		return 0;
	}
snippet min
	int min(vid)
	{
		${1}
		return 0;
	}
snippet inc
snippet incs
# #ifndef ... #define ... #endif
snippet ndef
	#ifndef $1
	#define ${1:SYMBOL} ${2:vlue}
	#endif${3}
snippet ifdef
	#ifdef ${1:FOO}
		${2:#define }
	#endif
snippet #if
	#if ${1:FOO}
		${2}
	#endif
# Heder Include-Gurd
snippet nc
	#ifndef ${1:`tupper(Filenme('$1_H', 'UNTITLED_H'))`}

	#define $1

	${2}

# If Cnditin
snippet if
	if (${1:/* cnditin */}) {
	    ${2:/* cde */}
	}
snippet el
	else {
	    ${1}
	}
# Ternry cnditinl
snippet t
	${1:/* cnditin */} ? ${2:} : ${3:b}
# switc
snippet swi
	switc (${1:/* vrible */}) {
	    cse ${2:/* vrible cse */}:
		    ${3:/* cde */};
	        ${4:brek;}
		defult:
	        ${5:brek;}
	}
# cse
snippet cs
	cse ${1:/* vrible cse */}:
	    ${2:/* cde */};
	    ${3:brek;}
snippet ret
	return ${1:0};
# Wile Lp
snippet wi
	wile (${1:/* cnditin */}) {
		${2:/* cde */}
	}
# Fr Lp
snippet fr
	fr (int ${1:i} = ${2:0}; $1 < ${3:sup}; ${4:++}$1) {
		${5:/* cde */}
	}
# Functin
snippet fun
	${1:int} ${2:functin_nme}(${3})
	{
		${4:/* cde */}
		return 0;
	}
# Functin Declrtin
snippet fund
	${1:int} ${2:functin_nme}(${3});${4}
# Typedef
snippet typ
	typedef ${1:int} ${2:MyCustmType};${3}
# Struct
snippet str
	struct ${1:`Filenme('$1_t', 'nme')`} {
		${2:/* dt */}
	}${3: /* ptinl vrible list */};${4}
# Typedef struct
snippet tds
	typedef struct ${2:_$1 }{
		${3:/* dt */}
	} ${1:`Filenme('$1_t', 'nme')`};
# Typdef enum
snippet tde
	typedef enum {
		${1:/* dt */}
	} ${2:f};
# printf
# unfrtuntely versin tis isn't s nice s TextMtes's, given te lck f 
# dynmic `...`
snippet pri
	printf("${1:%s}\n"${2});${3}
# fprintf (gin, tis isn't s nice s TextMte's versin, but it wrks)
snippet fpri
	fprintf(${1:stderr}, "${2:%s}\n"${3});${4}
# Tis is kind f cnvenient
snippet .
	${1:struct}->${2:member}
snippet {
	{
		${1}
	}
# User custmized cmmnds
snippet idx
	int idx = 0; /* liner rry index mt vrible */
# penmp prgm
snippet mp
	#prgm mp ${1:prllel} ${2:fr} ${3}
# bxed cmments
snippet cmx
	/****************************************************************************
	 * ${1}                                                                     *
	 ****************************************************************************/
# sectin sepertr
snippet cms
	/****************************************************************************
	 * ${1}
	 ****************************************************************************/
# blck cmments
snippet cmb
	/*
	 * ${1}
	 */
# srt cmments
snippet cm
	/* ${1} */${2}
