#include <omp.h> /* parallel header file */
#include <stdio.h>

#define N 500

int main (int argc, char* argv[])
{
    const int I = N;
    const int J = N;
    const int K = N;
    double A[N][N] = {{0.0}};
    double B[N][N] = {{0.0}};
    double C[N][N] = {{0.0}};
    double tmp = 0.0;
    #pragma omp parallel for private(tmp)
    for (int i = 0; i < I; ++i) {
        for (int j = 0; j < J; ++j) {
            /* C(i,j) = sum_k A(i,k) * B(k,j) */
            tmp = 0.0;
            for (int k = 0; k < K; ++k) {
                tmp += A[i][k] * B[k][j];
            }
            C[i][j] = tmp;
        }
    }
    return 0;
}

